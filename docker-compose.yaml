version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: docker/php/Dockerfile.app
    container_name: laravel_app
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DB_HOST=mysql
      - REDIS_HOST=redis
      - REVERB_HOST=reverb
      - REVERB_PORT=8080
    networks:
      - mini-chat-net
    healthcheck:
      test: ["CMD", "php-fpm-healthcheck"]
      interval: 10s
      timeout: 5s
      retries: 3

  reverb:
    build:
      context: .
      dockerfile: docker/php/Dockerfile.reverb
    container_name: reverb
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
    depends_on:
      redis:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      - REDIS_HOST=redis
      - REVERB_HOST=reverb
      - REVERB_PORT=8080
    networks:
      - mini-chat-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 3

  frontend:
    build:
      context: ./frontend
      dockerfile: ../docker/frontend/Dockerfile
    container_name: frontend
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - VITE_REVERB_HOST=localhost
      - VITE_REVERB_PORT=8080
    networks:
      - mini-chat-net
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5173 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 3

  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: root
      MYSQL_DATABASE: mini-chat
    volumes:
      - dbdata:/var/lib/mysql
    ports:
      - "3307:3306"
    networks:
      - mini-chat-net
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - mini-chat-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "80:80"
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/dist:/usr/share/nginx/html
    depends_on:
      - app
      - reverb
      - frontend
    networks:
      - mini-chat-net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  dbdata:

networks:
  mini-chat-net:
    driver: bridge
